'use strict';

// const eosio = require('../lib/eosio');
import ecc from "eosjs-ecc";



describe('eosio', () => {
    it('needs tests', done => {
    	new Promise(async () => {

    		/*
    		 LOG before hash {"data": [172, 163, 118, 242, 6, 184, 252, 37, 166, 237, 68, 219, 220, 102, 84, 124, 54, 198, 195, 62, 58, 17, 159, 251, 234, 239, 148, 54, 66, 240, 233, 6, 43, 25, 176, 93, 49, 188, 36, 89, 30, 98, 0, 0, 0, 0, 1, 0, 166, 130, 52, 3, 234, 48, 85, 0, 0, 0, 87, 45, 60, 205, 205, 1, 144, 167, 166, 8, 25, 145, 177, 202, 0, 0, 0, 0, 168, 237, 50, 50, 45, 144, 167, 166, 8, 25, 145, 177, 202, 112, 213, 194, 211, 220, 172, 150, 193, 1, 0, 0, 0, 0, 0, 0, 0, 4, 69, 79, 83, 0, 0, 0, 0, 12, 116, 101, 115, 116, 50, 97, 99, 99, 111, 117, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "type": "Buffer"}
			 LOG  hash 77df9279e14dc9ace89ff9b5e41550eec61ab2a0ed00edff165f805df6690b4c
			 LOG  hashed SIG_K1_K5iR2Fbqpq2xQfMk9iC8SCbt4N71tZETR2PPxbTT4xKZ7JtFg4MxaGQbQKj8nebb6CAYpaa2CPqRDXokoiVTpuVrZxPvfK
    		 */



    		const privateKey = '5JVUXUwzmax4ugTa2Dravw7eJboXkBwCRnpcEeshPuihZtUU8o3';
		    let buffer = Buffer.from({"data": [172, 163, 118, 242, 6, 184, 252, 37, 166, 237, 68, 219, 220, 102, 84, 124, 54, 198, 195, 62, 58, 17, 159, 251, 234, 239, 148, 54, 66, 240, 233, 6, 21, 32, 176, 93, 6, 202, 31, 173, 164, 13, 0, 0, 0, 0, 1, 0, 166, 130, 52, 3, 234, 48, 85, 0, 0, 0, 87, 45, 60, 205, 205, 1, 144, 167, 166, 8, 25, 145, 177, 202, 0, 0, 0, 0, 168, 237, 50, 50, 45, 144, 167, 166, 8, 25, 145, 177, 202, 112, 213, 194, 211, 220, 172, 150, 193, 1, 0, 0, 0, 0, 0, 0, 0, 4, 69, 79, 83, 0, 0, 0, 0, 12, 116, 101, 115, 116, 50, 97, 99, 99, 111, 117, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "type": "Buffer"});

		    console.log('correct hash', ecc.sha256(buffer));
		    console.log('possible hash', ecc.sha256(`{"data": [172, 163, 118, 242, 6, 184, 252, 37, 166, 237, 68, 219, 220, 102, 84, 124, 54, 198, 195, 62, 58, 17, 159, 251, 234, 239, 148, 54, 66, 240, 233, 6, 254, 29, 176, 93, 216, 197, 61, 180, 151, 214, 0, 0, 0, 0, 1, 0, 166, 130, 52, 3, 234, 48, 85, 0, 0, 0, 87, 45, 60, 205, 205, 1, 144, 167, 166, 8, 25, 145, 177, 202, 0, 0, 0, 0, 168, 237, 50, 50, 45, 144, 167, 166, 8, 25, 145, 177, 202, 112, 213, 194, 211, 220, 172, 150, 193, 1, 0, 0, 0, 0, 0, 0, 0, 4, 69, 79, 83, 0, 0, 0, 0, 12, 116, 101, 115, 116, 50, 97, 99, 99, 111, 117, 110, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "type": "Buffer"}`));
		    // console.log('buf sig', await ecc.sign(buffer, privateKey));
		    console.log('hash sig', await ecc.signHash(ecc.sha256(buffer), privateKey));
    		done();
	    })
    });
});
